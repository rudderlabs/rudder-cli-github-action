name: "Rudderstack Tracking Plan Manager"
description: "Validate and manage Rudderstack tracking plans through GitHub Actions"
author: "Your Name"

branding:
  icon: "upload-cloud"
  color: "blue"

inputs:
  location:
    description: "Path to the folder containing tracking plan files"
    required: true
  mode:
    description: "Operation mode. Must be one of: 'validate', 'dry-run', or 'apply'"
    required: true
  cli_version:
    description: "Version of rudder-cli to use"
    required: false
    default: "v0.2.0"

runs:
  using: "composite"
  steps:
    - name: Download Rudder CLI
      shell: bash
      run: |
        curl -L https://github.com/rudderlabs/rudder-iac/releases/download/${{ inputs.cli_version }}/rudder-cli_Linux_x86_64.tar.gz | tar -xz rudder-cli
        chmod +x rudder-cli
        sudo mv rudder-cli /usr/local/bin/

    - name: Verify environment
      shell: bash
      run: |
        if [ -z "$RUDDERSTACK_ACCESS_TOKEN" ]; then
          echo "::error::RUDDERSTACK_ACCESS_TOKEN environment variable is not set. Please set it using repository secrets."
          exit 1
        fi

        # Validate mode input
        if [[ "${{ inputs.mode }}" != "validate" && "${{ inputs.mode }}" != "dry-run" && "${{ inputs.mode }}" != "apply" ]]; then
          echo "::error::Invalid mode: ${{ inputs.mode }}. Mode must be one of: validate, dry-run, apply"
          exit 1
        fi

    - name: Validate tracking plan
      if: inputs.mode == 'validate'
      shell: bash
      run: |
        rudder-cli tp validate -l ${{ inputs.location }}

    - name: Perform dry run
      if: inputs.mode == 'dry-run'
      shell: bash
      run: |
        rudder-cli tp apply -l ${{ inputs.location }} --dry-run

    - name: Apply tracking plan
      if: inputs.mode == 'apply'
      shell: bash
      run: |
        rudder-cli tp apply -l ${{ inputs.location }}
